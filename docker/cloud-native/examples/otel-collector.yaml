receivers:
  otlp:
    protocols:
      grpc: { endpoint: "0.0.0.0:4317" }
      #http: { endpoint: "0.0.0.0:4318" }

processors:
  batch:
  #  timeout: 5s
  #  send_batch_size: 8192
  #  send_batch_max_size: 10000

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"
    metric_expiration: 60m
    #namespace: "my_service"
    #const_labels: { k1: v1 }
    #scrape_configs:
    #- job_name: 'kubernetes-pods'
    #  kubernetes_sd_configs: { role: pod }
    #  relabel_configs:
    #  - { source_labels: [__meta_kubernetes_namespace], target_label: namespace }
    #  - { source_labels: [__meta_kubernetes_pod_name], target_label: pod_name }

  #jaeger:
  #  endpoint: otel-jaeger:14250
  #  tls: { insecure: true }
  otlp:
    endpoint: otel-jaeger:4317
    tls: { insecure: true }

  #logging:

#processors:
#  batch: {timeout: 5s, send_batch_size: 1024}
#  attributes:
#    actions:
#    - { key: "http.url", action: "delete" }
#  memory_limiter:
#    check_interval: 1s
#    limit_mib: 512
#    spike_limit_mib: 128
#  resource:
#    attributes:
#    - { key: "environment", value: "production", action: "insert" }
#  filter:
#    metrics:
#      include:
#        match_type: "strict"
#        metric_names: { "http_requests_total" }
#  span:
#    name:
#      from_attributes: ["http.method", "http.route"]
#      separator: " "

service:
  pipelines:
    traces:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ otlp ]
    metrics:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ prometheus ]
