# https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-docker-registry-on-ubuntu-20-04

server {
	listen       80;
	server_name  ${DOMAIN};
	return       301 https://$server_name$request_uri;
}

server {
	listen         443 ssl http2;
	server_name    ${DOMAIN} ssl http2;
	charset        utf-8;
	server_tokens  off;
	gzip           on;
	client_max_body_size 6114m; # 6GB

	access_log  ${NGINX_Dir}/logs/registry.log;
	error_log   ${NGINX_Dir}/logs/registry.error.log;

	#### ssl
	ssl_certificate      ${NGINX_Dir}/certs/${DOMAIN}.cer;
	ssl_certificate_key  ${NGINX_Dir}/certs/${DOMAIN}.key;
	ssl_session_cache    shared:SSL:1m;
	ssl_session_timeout  5m;
	ssl_ciphers          ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
	ssl_protocols        TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers  on;

	location / {
		proxy_pass          http://localhost:${PORT};
		proxy_set_header    Host               $http_host;   # required for docker client's sake
		proxy_set_header    X-Real-IP          $remote_addr; # pass on real client's IP
		proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto  $scheme;
		proxy_set_header    X-Request-Id       $request_id;
		proxy_read_timeout  900;
	}

	# Do not allow connections from docker 1.5 and earlier
	# docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
	if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
		return 404;
	}

    if ( $request_method !~ ^(GET)$ ) {
		return 405;
	}
}
