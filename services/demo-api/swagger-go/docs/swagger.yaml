definitions:
  route.LoginUser:
    properties:
      password:
        type: string
      region:
        type: string
      userId:
        type: string
    type: object
  route.Response:
    properties:
      code:
        type: integer
      data:
        additionalProperties: {}
        type: object
      msg:
        type: string
    type: object
info:
  contact: {}
paths:
  /accounts/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Account Name
        in: query
        name: name
        type: string
      - description: user password
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/route.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Response'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Show an account
      tags:
      - accounts
swagger: "2.0"
