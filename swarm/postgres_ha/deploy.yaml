version: '3'

services:
  postgres-node01:
    image: postgres:16-alpine
    container_name: postgres-node01
    restart: always
    user: postgres
    networks: ["net"]
    ports: ["127.0.0.1:5441:5432"]
    environment: [TZ=Asia/Shanghai, PGTZ=Asia/Shanghai]
    # - POSTGRES_USER=postgres
    # - POSTGRES_DB=postgres
    # - POSTGRES_PASSWORD=postgres
    # - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
    # - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
    - ./data/postgres-node01:/var/lib/postgresql/data/pgdata
    - ./bin:/app/bin:ro
    - ./configs/postgres-node01.yaml:/app/configs/psql.yaml:ro
    command: [bash, /app/bin/psql_primary.sh]

  postgres-node02:
    image: postgres:16-alpine
    container_name: postgres-node02
    restart: always
    user: postgres
    depends_on: [postgres-node01]
    networks: [net]
    ports: ["127.0.0.1:5442:5432"]
    environment: [TZ=Asia/Shanghai, PGTZ=Asia/Shanghai]
    volumes:
    - ./data/postgres-node02:/var/lib/postgresql/data/pgdata
    - ./bin:/app/bin:ro
    - ./configs/postgres-node02.yaml:/app/configs/psql.yaml:ro
    command: [bash, /app/bin/psql_replica.sh]

  postgres-node03:
    image: postgres:16-alpine
    container_name: postgres-node03
    restart: always
    user: postgres
    depends_on: [postgres-node01]
    networks: [net]
    ports: ["127.0.0.1:5443:5432"]
    environment: [TZ=Asia/Shanghai, PGTZ=Asia/Shanghai]
    volumes:
    - ./data/postgres-node03:/var/lib/postgresql/data/pgdata
    - ./bin:/app/bin:ro
    - ./configs/postgres-node03.yaml:/app/configs/psql.yaml:ro
    command: [bash, /app/bin/psql_replica.sh]

  postgres-node04:
    image: postgres:16-alpine
    container_name: postgres-node04
    restart: always
    user: postgres
    depends_on: [postgres-node01]
    networks: [net]
    ports: ["127.0.0.1:5444:5432"]
    environment: [TZ=Asia/Shanghai, PGTZ=Asia/Shanghai]
    volumes:
    - ./data/postgres-node04:/var/lib/postgresql/data/pgdata
    - ./bin:/app/bin:ro
    - ./configs/postgres-node04.yaml:/app/configs/psql.yaml:ro
    command: [bash, /app/bin/psql_replica.sh]

networks:
  net:
    name: postgres_classic
    driver: bridge
    external: false
    ipam:
      config:
      - { subnet: 172.25.0.0/16, gateway: 172.25.0.1 }
