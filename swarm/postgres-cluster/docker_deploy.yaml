version: '3'

services:
  postgres-node01:
    image: postgres:16-alpine
    container_name: postgres-node01
    restart: always
    healthcheck:
      test: pg_isready --username postgres --dbname postgres
      start_period: 10s
      interval: 30s
      timeout: 3s
      retries: 3
    user: postgres
    networks: ["net"]
    ports: ["127.0.0.1:5441:5432"]
    environment: [TZ=Asia/Shanghai, PGTZ=Asia/Shanghai]
    # - POSTGRES_USER=postgres
    # - POSTGRES_DB=postgres
    # - POSTGRES_PASSWORD=postgres
    # - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
    # - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
    - ./bin:/app/bin:ro
    - ./configs:/app/configs:ro
    - ./data/postgres-node01:/app/data
    command: [/app/bin/psql_primary.sh, /app/configs/postgres-node01.yaml]

  postgres-node02:
    image: postgres:16-alpine
    container_name: postgres-node02
    restart: always
    healthcheck:
      test: pg_isready --username postgres --dbname postgres
      start_period: 10s
      interval: 30s
      timeout: 3s
      retries: 3
    user: postgres
    depends_on: [postgres-node01]
    networks: [net]
    ports: ["127.0.0.1:5442:5432"]
    environment: [TZ=Asia/Shanghai, PGTZ=Asia/Shanghai]
    volumes:
    - ./bin:/app/bin:ro
    - ./configs:/app/configs:ro
    - ./data/postgres-node02:/app/data
    command: [/app/bin/psql_replica.sh, /app/configs/postgres-node02.yaml]

  postgres-node03:
    image: postgres:16-alpine
    container_name: postgres-node03
    restart: always
    healthcheck:
      test: pg_isready --username postgres --dbname postgres
      start_period: 10s
      interval: 30s
      timeout: 3s
      retries: 3
    user: postgres
    depends_on: [postgres-node01]
    networks: [net]
    ports: ["127.0.0.1:5443:5432"]
    environment: [TZ=Asia/Shanghai, PGTZ=Asia/Shanghai]
    volumes:
    - ./bin:/app/bin:ro
    - ./configs:/app/configs:ro
    - ./data/postgres-node03:/app/data
    command: [/app/bin/psql_replica.sh, /app/configs/postgres-node03.yaml]

  postgres-node04:
    image: postgres:16-alpine
    container_name: postgres-node04
    restart: always
    healthcheck:
      test: pg_isready --username postgres --dbname postgres
      start_period: 10s
      interval: 30s
      timeout: 3s
      retries: 3
    user: postgres
    depends_on: [postgres-node01]
    networks: [net]
    ports: ["127.0.0.1:5444:5432"]
    environment: [TZ=Asia/Shanghai, PGTZ=Asia/Shanghai]
    volumes:
    - ./bin:/app/bin:ro
    - ./configs:/app/configs:ro
    - ./data/postgres-node04:/app/data
    command: [/app/bin/psql_replica.sh, /app/configs/postgres-node04.yaml]

networks:
  net:
    name: postgres-cluster
    driver: bridge
    external: false
    ipam:
      config:
      - { subnet: 172.25.0.0/16, gateway: 172.25.0.1 }
