# FROM node:20-alpine AS builder
FROM node:lts-alpine AS builder

ARG APP_Name
ARG APP_Version
ARG BASE_Path
ARG region

MAINTAINER github.com/d2jvkpn <d2jvkpn@noreply.local>

LABEL app=${APP_Name}
LABEL version=${APP_Version}
LABEL stage=build

#SHELL ["/bin/bash", "-c"]

WORKDIR /apps

RUN echo "==> BASE_Path: ${BASE_Path}"

# *.env.* index.html
ADD  *.js *.json  ./
COPY public/ ./public
COPY src/ ./src

COPY cache.local ./cache.local
RUN cp cache.local/env ./.env

RUN if [ -d ./cache.local/node_modules ]; then \
    echo "==> Found ./cache.local/node_modules"; \
    mv ./cache.local/node_modules ./; \
  fi


RUN if [ "$region" = "cn" ]; then \
    echo "==> region: $region"; \
    npm config set registry https://registry.npmmirror.com; \
  fi

# npm install --registry=https://registry.npmmirror.com &> /dev/null
RUN npm install && npm run build -- --dest target/static${BASE_Path}

ADD cache.local/build.yaml ./target/
ADD cache.local/build.json target/static${BASE_Path}/build.json

####
FROM nginx:1-alpine

ARG APP_Name
ARG APP_Version
ARG BASE_Path

MAINTAINER github.com/d2jvkpn <d2jvkpn@noreply.local>

LABEL app=${APP_Name}
LABEL version=${APP_Version}
LABEL stage=running

ENV APP_Name=${APP_Name}
ENV APP_Version=${APP_Version}
ENV TZ=${TZ:-Asia/Shanghai}

#SHELL ["/bin/bash", "-c"]

WORKDIR /apps

COPY --from=builder /apps/target ./target

RUN mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bk && \
  sed -i '/worker_processes/s#auto#4#' /etc/nginx/nginx.conf

COPY deploy/static.nginx.conf /etc/nginx/conf.d/

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
#CMD ["nginx", "-c", "/etc/nginx/nginx.conf", "-g", "daemon off;"]
