networks:
  net: { name: kafka-cluster, driver: bridge, external: false }

x-kafka-service: &kafka-service
  image: local/kafka:${TAG}
  restart: always
  user: "${USER_UID}:${USER_GID}"
  deploy:
    resources:
      limits: { cpus: "2.0", memory: 2.0G }
      reservations: { cpus: "0.25", memory: 512M }
  networks: [net]
  environment:
    TZ: Asia/Shanghai

services:
  kafka-node01:
    <<: *kafka-service
    container_name: kafka-node01
    hostname: kafka-node01
    ports: ["9191:9192"]
    volumes:
    - ./data/kafka-node01:/opt/data/kafka
    - ./logs/kafka-node01:/opt/kafka/logs
    command: ["/opt/entrypoint.sh"]

  kafka-node02:
    <<: *kafka-service
    container_name: kafka-node02
    hostname: kafka-node02
    ports: ["9192:9192"]
    volumes:
    - ./data/kafka-node02:/opt/data/kafka
    - ./logs/kafka-node02:/opt/kafka/logs
    command: ["/opt/entrypoint.sh"]

  kafka-node03:
    <<: *kafka-service
    container_name: kafka-node03
    hostname: kafka-node03
    ports: ["9193:9192"]
    volumes:
    - ./data/kafka-node03:/opt/data/kafka
    - ./logs/kafka-node03:/opt/kafka/logs
    command: ["/opt/entrypoint.sh"]

  kafka-kafdrop:
    image: obsidiandynamics/kafdrop:4.1.0
    container_name: kafka-kafdrop
    restart: always
    depends_on: [kafka-node01, kafka-node02, kafka-node03]
    user: "${USER_UID}:${USER_GID}"
    #network_mode: host
    #expose: ["9000"]
    networks: [net]
    ports: [9000:9000]
    volumes:
    - ./data/kafka-kafdrop:/var/protobuf_desc
    environment:
      KAFKA_BROKERCONNECT: 127.0.0.1:9191,127.0.0.1:9192,127.0.0.1:9192
      SERVER_SERVLET_CONTEXTPATH: /
      CMD_ARGS: --message.format=PROTOBUF --protobufdesc.directory=/var/protobuf_desc --topic.createEnabled=false --topic.deleteEnabled=false
      JVM_OPTS: -Xms32M -Xmx64M
