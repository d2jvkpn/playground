# url: https://github.com/elastic/elasticsearch/blob/8.17/docs/reference/setup/install/docker/docker-compose.yml

networks:
  net:
    name: es-cluster
    driver: bridge
    external: false
    ipam:
      config:
      - { subnet: 172.24.0.0/16, gateway: 172.24.0.1 }

services:
  es-node01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: es-node01
    hostname: es-node01
    deploy:
      resources:
        limits: { cpus: "2", memory: 4GB }
        reservations: { cpu: "0.1", memory: "128M"}
      ulimits:
        nofile: { soft: 65535, hard: 65535 }
    ulimits:
      memlock: { soft: -1, hard: -1 }
    healthcheck:
      interval: 10s
      timeout: 10s
      retries: 120
      test:
      - CMD-SHELL
      - curl -s --cacert config/certs/ca.crt https://localhost:9200 |
        grep -q 'missing authentication credentials'
    networks:
      net: { ipv4_address: 172.24.0.11 }
    ports: ["9201:9200"]
    volumes:
    - ./configs/certs:/usr/share/elasticsearch/config/certs
    - ./configs/certs/es-node01:/usr/share/elasticsearch/config/certs/node
    - ./data/es-node01:/usr/share/elasticsearch/data
    env_file: ["./compose.env"]
    environment:
      node.name: es-node01
      discovery.seed_hosts: es-node02,es-node03
      cluster.initial_master_nodes: es-node01,es-node02,es-node03
      ES_JAVA_OPTS: -Xms2g -Xmx2g

  es-node02:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: es-node02
    hostname: es-node02
    depends_on: [es-node01]
    deploy:
      resources:
        limits: { cpus: "2", memory: 4GB }
        reservations: { cpu: "0.1", memory: "128M"}
      ulimits:
        nofile: { soft: 65535, hard: 65535 }
    ulimits:
      memlock: { soft: -1, hard: -1 }
    healthcheck:
      interval: 10s
      timeout: 10s
      retries: 120
      test:
      - CMD-SHELL
      - curl -s --cacert config/certs/ca.crt https://localhost:9200 |
        grep -q 'missing authentication credentials'
    networks:
      net: { ipv4_address: 172.24.0.12 }
    ports: ["9202:9200"]
    volumes:
    - ./configs/certs:/usr/share/elasticsearch/config/certs
    - ./configs/certs/es-node02:/usr/share/elasticsearch/config/certs/node
    - ./data/es-node02:/usr/share/elasticsearch/data
    env_file: ["./compose.env"]
    environment:
      node.name: es-node02
      discovery.seed_hosts: es-node01,es-node03
      cluster.initial_master_nodes: es-node01,es-node02,es-node03
      ES_JAVA_OPTS: -Xms2g -Xmx2g

  es-node03:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: es-node03
    hostname: es-node03
    depends_on: [es-node02]
    deploy:
      resources:
        limits: { cpus: "2", memory: 4GB }
        reservations: { cpu: "0.1", memory: "128M"}
      ulimits:
        nofile: { soft: 65535, hard: 65535 }
    ulimits:
      memlock: { soft: -1, hard: -1 }
    healthcheck:
      interval: 10s
      timeout: 10s
      retries: 120
      test:
      - CMD-SHELL
      - curl -s --cacert config/certs/ca.crt https://localhost:9200 |
        grep -q 'missing authentication credentials'
    networks:
      net: { ipv4_address: 172.24.0.13 }
    ports: ["9203:9200"]
    volumes:
    - ./configs/certs:/usr/share/elasticsearch/config/certs
    - ./configs/certs/es-node03:/usr/share/elasticsearch/config/certs/node
    - ./data/es-node03:/usr/share/elasticsearch/data
    env_file: ["./compose.env"]
    environment:
      node.name: es-node03
      discovery.seed_hosts: es-node01,es-node02
      cluster.initial_master_nodes: es-node01,es-node02,es-node03
      ES_JAVA_OPTS: -Xms2g -Xmx2g

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.0
    container_name: es-kibana
    hostname: es-kibana
    depends_on:
      es-node01: { condition: service_healthy }
      es-node02: { condition: service_healthy }
      es-node03: { condition: service_healthy }
    deploy:
      resources:
        limits: { cpus: "1", memory: 1GB }
    healthcheck:
      interval: 10s
      timeout: 10s
      retries: 120
      test:
      - CMD-SHELL
      - curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'
    networks: [net]
    ports: ["5601:5601"]
    #volumes:
    #- ./data/es-kibana:/usr/share/kibana/data
    environment:
      SERVERNAME: kibana
      XPACK_APM_SERVICEMAPENABLED: "true"
      #elasticsearch.ssl.verification_mode: none
      #XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: aaaaaaaa-c4d3-4a0a-8290-2abcb83ab3aa
