# url: https://github.com/elastic/elasticsearch/blob/8.17/docs/reference/setup/install/docker/docker-compose.yml
# path: compose.yaml

networks:
  net:
    name: elastic-cluster
    driver: bridge
    external: false
    #ipam:
    #  config:
    #  - { subnet: 172.24.0.0/16, gateway: 172.24.0.1 }

x-kibana-service: &kibana-service
  image: docker.elastic.co/kibana/kibana:9.1.4
  #image: docker.elastic.co/kibana/kibana:8.19.4

x-elastic-service: &elastic-service
  image: docker.elastic.co/elasticsearch/elasticsearch:9.1.4
  #image: docker.elastic.co/elasticsearch/elasticsearch:8.19.4
  restart: always
  deploy:
    resources:
      limits: { cpus: "2", memory: 4GB }
      reservations: { cpus: "0.5", memory: "2GB"}
  ulimits:
    memlock: { soft: -1, hard: -1 }
    nofile: { soft: 65535, hard: 65535 }
  healthcheck:
    interval: 10s
    timeout: 10s
    retries: 120
    test:
    - CMD-SHELL
    - curl -s --cacert config/certs/ca.crt https://localhost:9200 |
      grep -q 'missing authentication credentials'
  networks: [net]
    #net: { ipv4_address: 172.24.0.11 }

x-elastic-env: &elastic-env
  ELASTIC_PASSWORD_FILE: ./config/certs/elastic.pass
  ES_JAVA_OPTS: -Xms2g -Xmx2g
  cluster.name: elastic-cluster
  bootstrap.memory_lock: "true"
  xpack.ml.use_auto_machine_memory_percent: "true"
  xpack.license.self_generated.type: basic

  xpack.security.enabled: "true"
  xpack.security.enrollment.enabled: "true"
  xpack.security.http.ssl.enabled: "true"
  xpack.security.http.ssl.certificate_authorities: certs/ca.crt
  xpack.security.transport.ssl.enabled: "true"
  xpack.security.transport.ssl.certificate_authorities: certs/ca.crt
  xpack.security.transport.ssl.verification_mode: certificate

  xpack.security.http.ssl.key: certs/node/node.key
  xpack.security.http.ssl.certificate: certs/node/node.crt
  xpack.security.transport.ssl.key: certs/node/node.key
  xpack.security.transport.ssl.certificate: certs/node/node.crt

services:
  elastic-node01:
    <<: *elastic-service
    container_name: elastic-node01
    hostname: elastic-node01
    ports: ["127.0.0.1:9201:9200"]
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - /etc/timezone:/etc/timezone:ro
    - ./configs/certs:/usr/share/elasticsearch/config/certs
    - ./configs/certs/elastic-node01:/usr/share/elasticsearch/config/certs/node
    - ./data/elastic-node01/data:/usr/share/elasticsearch/data
    - ./data/elastic-node01/plugins:/usr/share/elasticsearch/plugins
    #env_file: ["./compose.env"]
    environment:
      <<: *elastic-env
      node.name: elastic-node01
      hostname: elastic-node01
      discovery.seed_hosts: elastic-node02,elastic-node03
      cluster.initial_master_nodes: elastic-node01,elastic-node02,elastic-node03

  elastic-node02:
    <<: *elastic-service
    container_name: elastic-node02
    hostname: elastic-node02
    depends_on: [elastic-node01]
    ports: ["127.0.0.1:9202:9200"]
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - /etc/timezone:/etc/timezone:ro
    - ./configs/certs:/usr/share/elasticsearch/config/certs
    - ./configs/certs/elastic-node02:/usr/share/elasticsearch/config/certs/node
    - ./data/elastic-node02/data:/usr/share/elasticsearch/data
    - ./data/elastic-node02/plugins:/usr/share/elasticsearch/plugins
    environment:
      <<: *elastic-env
      node.name: elastic-node02
      hostname: elastic-node02
      discovery.seed_hosts: elastic-node01,elastic-node03
      cluster.initial_master_nodes: elastic-node01,elastic-node02,elastic-node03

  elastic-node03:
    <<: *elastic-service
    container_name: elastic-node03
    hostname: elastic-node03
    depends_on: [elastic-node02]
    ports: ["127.0.0.1:9203:9200"]
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - /etc/timezone:/etc/timezone:ro
    - ./configs/certs:/usr/share/elasticsearch/config/certs
    - ./configs/certs/elastic-node03:/usr/share/elasticsearch/config/certs/node
    - ./data/elastic-node03/data:/usr/share/elasticsearch/data
    - ./data/elastic-node03/plugins:/usr/share/elasticsearch/plugins
    environment:
      <<: *elastic-env
      node.name: elastic-node03
      hostname: elastic-node03
      discovery.seed_hosts: elastic-node01,elastic-node02
      cluster.initial_master_nodes: elastic-node01,elastic-node02,elastic-node03

  kibana:
    <<: *kibana-service
    container_name: elastic-kibana
    hostname: elastic-kibana
    depends_on:
      elastic-node01: { condition: service_healthy }
      elastic-node02: { condition: service_healthy }
      elastic-node03: { condition: service_healthy }
    deploy:
      resources:
        limits: { cpus: "1", memory: 1GB }
    healthcheck:
      interval: 10s
      timeout: 10s
      retries: 120
      test:
      - CMD-SHELL
      - curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'
    networks: [net]
    ports: ["127.0.0.1:5601:5601"]
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - /etc/timezone:/etc/timezone:ro
    - ./configs/elastic-kibana:/usr/share/kibana/config
    - ./data/elastic-kibana:/usr/share/kibana/data
    environment:
      SERVERNAME: kibana
      XPACK_APM_SERVICEMAPENABLED: "true"
      #elasticsearch.ssl.verification_mode: none
      #XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: aaaaaaaa-c4d3-4a0a-8290-2abcb83ab3aa
